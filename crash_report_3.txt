#
# An unexpected error has been detected by the Flix compiler:
#
#   No default or matching definition found for 'Add.add'.
#
# This is a bug in the Flix compiler. Please report it here:
#
# https://github.com/flix/flix/issues
#
# -- Flix Compiler --
#
# Flix Version : v0.34.0
#   incremental: All
#
# -- Java Virtual Machine --
#
# JVM Version  : 17.0.4.1 (2022-08-12)
# JVM Vendor   : Microsoft
# JAVA_HOME    : /usr/lib/jvm/msopenjdk-current
# System       : Linux (5.15.49-linuxkit)
#
# -- Stack Trace --
ca.uwaterloo.flix.util.InternalCompilerException: No default or matching definition found for 'Add.add'.
	at ca.uwaterloo.flix.language.phase.Monomorph$.specializeSigSym(Monomorph.scala:645)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:271)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:284)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:280)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:280)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$1(Monomorph.scala:285)
	at scala.collection.immutable.List.map(List.scala:246)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:285)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:246)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:246)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:250)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:250)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:246)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:246)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:250)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:250)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$specialize$12(Monomorph.scala:401)
	at scala.collection.immutable.List.map(List.scala:250)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:401)
	at ca.uwaterloo.flix.language.phase.Monomorph$.visitExp$1(Monomorph.scala:397)
	at ca.uwaterloo.flix.language.phase.Monomorph$.specialize(Monomorph.scala:599)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$run$4(Monomorph.scala:196)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:889)
	at ca.uwaterloo.flix.language.phase.Monomorph$.$anonfun$run$1(Monomorph.scala:187)
	at ca.uwaterloo.flix.api.Flix.phase(Flix.scala:595)
	at ca.uwaterloo.flix.language.phase.Monomorph$.run(Monomorph.scala:163)
	at ca.uwaterloo.flix.api.Flix.$anonfun$codeGen$3(Flix.scala:548)
	at ca.uwaterloo.flix.util.Validation.flatMap(Validation.scala:50)
	at ca.uwaterloo.flix.util.Validation.flatMap$(Validation.scala:49)
	at ca.uwaterloo.flix.util.Validation$Success.flatMap(Validation.scala:79)
	at ca.uwaterloo.flix.api.Flix.$anonfun$codeGen$2(Flix.scala:547)
	at ca.uwaterloo.flix.util.Validation.flatMap(Validation.scala:50)
	at ca.uwaterloo.flix.util.Validation.flatMap$(Validation.scala:49)
	at ca.uwaterloo.flix.util.Validation$Success.flatMap(Validation.scala:79)
	at ca.uwaterloo.flix.api.Flix.$anonfun$codeGen$1(Flix.scala:546)
	at ca.uwaterloo.flix.util.Validation.flatMap(Validation.scala:50)
	at ca.uwaterloo.flix.util.Validation.flatMap$(Validation.scala:49)
	at ca.uwaterloo.flix.util.Validation$Success.flatMap(Validation.scala:79)
	at ca.uwaterloo.flix.api.Flix.codeGen(Flix.scala:545)
	at ca.uwaterloo.flix.runtime.shell.Shell.$anonfun$compile$1(Shell.scala:359)
	at ca.uwaterloo.flix.util.Validation$.flatMapN(Validation.scala:268)
	at ca.uwaterloo.flix.runtime.shell.Shell.compile(Shell.scala:359)
	at ca.uwaterloo.flix.runtime.shell.Shell.execReload(Shell.scala:189)
	at ca.uwaterloo.flix.runtime.shell.Shell.execute(Shell.scala:167)
	at ca.uwaterloo.flix.runtime.shell.Shell.loop(Shell.scala:124)
	at ca.uwaterloo.flix.Main$.main(Main.scala:165)
	at ca.uwaterloo.flix.Main.main(Main.scala)

